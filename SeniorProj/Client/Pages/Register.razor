@page "/register"
@using SeniorProj.Shared
@using System.Security.Cryptography
@using System.Security.Principal
@using Microsoft.CodeAnalysis
@inject HttpClient Http
<style>
div.container {
  max-width: 500px;
  margin: auto;
}

.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#38B2E3}
.btn-primary{color:#fff;background-color:#38B2E3;border-color:#38B2E3}.btn-primary:hover{color:#fff;background-color:#3DC2F7;border-color:#3DC2F7}.btn-check:focus+.btn-primary,.btn-primary:focus{color:#fff;background-color:#3DC2F7;border-color:#3DC2F7;box-shadow:0 0 0 .25rem rgba(49,132,253,.5)}.btn-check:active+.btn-primary,.btn-check:checked+.btn-primary,.btn-primary.active,.btn-primary:active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0a58ca;border-color:#0a53be}.btn-check:active+.btn-primary:focus,.btn-check:checked+.btn-primary:focus,.btn-primary.active:focus,.btn-primary:active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .25rem rgba(49,132,253,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#0d6efd;border-color:#0d6efd}
</style>


<PageTitle>Register</PageTitle>

<div class="container">
  <!-- Pills navs -->
  <ul class="nav nav-pills nav-justified mb-3" id="ex1" role="tablist">
    <li class="nav-item" role="presentation">
      <a class="nav-link" id="tab-login" data-mdb-toggle="pill" href="login" role="tab"
         aria-controls="pills-login" aria-selected="false">Log In</a>
    </li>
    <li class="nav-item" role="presentation">
      <a class="nav-link active" id="tab-register" data-mdb-toggle="pill" href="register" role="tab"
         aria-controls="pills-register" aria-selected="true">Register</a>
    </li>
  </ul>
  <!-- Pills navs -->

  <!-- Pills content -->
  <div class="tab-content">
    <div class="tab-pane fade" id="pills-login" role="tabpanel" aria-labelledby="tab-login">
      <form>
        <!-- Email input -->
        <div class="form-outline mb-4">
          <label class="form-label" for="loginName">Username:</label>
          <input type="email" id="loginName" class="form-control" placeholder="Email or username"/>
        </div>

        <!-- Password input -->
        <div class="form-outline mb-4">
          <label class="form-label" for="loginPassword">Password:</label>
          <input type="password" id="loginPassword" class="form-control" placeholder="Password"/>
        </div>

        <!-- 2 column grid layout -->
        <div class="row mb-4">
          <div class="col-md-6 d-flex justify-content-center">
            <!-- Checkbox -->
            <div class="form-check mb-3 mb-md-0">
              <input class="form-check-input" type="checkbox" value="" id="loginCheck" checked />
              <label class="form-check-label" for="loginCheck"> Remember me </label>
            </div>
          </div>

          <div class="col-md-6 d-flex justify-content-center">
            <!-- Simple link -->
            <a href="#!">Forgot password?</a>
          </div>
        </div>

        <!-- Submit button -->
        <button type="submit" class="btn btn-primary btn-block mb-4">Sign In</button>

        <!-- Register buttons -->
        <div class="text-center">
          <p>Not a member? <a href="#!">Register</a></p>
        </div>
      </form>
    </div>


    @code{
      //create new user instance and variable
      UserDto request = new UserDto();
      User user = new User();
    }
    <div class="tab-pane fade show active" id="pills-register" role="tabpanel" aria-labelledby="tab-register">
      <form>
        <!-- Name input -->
        <div class="form-outline mb-4">
                    <label class="form-label" for="registerName">Name:</label>
          <input type="text" id="registerName" class="form-control" @bind="@request.Name" required=""/>
        </div>

        <!-- Username input -->
        <div class="form-outline mb-4">
                    <label class="form-label" for="registerUsername">Username:</label>
          <input type="text" id="registerUsername" class="form-control" @bind="@request.Username" required/>
        </div>

        <!-- Email input -->
        <div class="form-outline mb-4">
                    <label class="form-label" for="registerEmail">Email:</label>
          <input type="email" id="registerEmail" class="form-control" @bind="@request.Email" required=""/>
        </div>

        <!-- Zipcode input -->
        <div class="form-outline mb-4">
                    <label class="form-label" for="registerZip">ZIP Code:</label>
          <input type="zip" id="registerZip" class="form-control" @bind="@request.PostalCode" required=""/>
        </div>

        <!-- Password input -->
        <div class="form-outline mb-4">
                    <label class="form-label" for="registerPassword">Password:</label>
          <input type="password" id="registerPassword" class="form-control" @bind="@request.Password1" required=""/>
        </div>

        <!-- Repeat Password input -->
        <div class="form-outline mb-4">
                    <label class="form-label" for="registerRepeatPassword">Repeat password:</label>
          <input type="password" id="registerRepeatPassword" class="form-control" @bind="@request.Password2" required=""/>
        </div>

        <!-- Checkbox -->
        <div class="form-check d-flex justify-content-center mb-4">
          <input class="form-check-input me-2" type="checkbox" value="" id="registerCheck"
                 aria-describedby="registerCheckHelpText" @bind="@request.Notifications"/>
          <label class="form-check-label" for="registerCheck">
            Would you like to sign up for email notifications?
          </label>
        </div>

        <!-- Submit button -->
        <div class="text-center">
          <div class="form-group">
            <button type="button" class="btn btn-primary btn-block mb-3" @onclick="@Put" value="Save">Sign up</button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>
<!-- Pills content -->


@code {
  //Send User object to the User controller in the server
  protected async Task Put()
  {
    if (request.Password1 == request.Password2 && request.Password1!= null)
    {

  /*SeniorProj.Shared.Helpers.CreatePasswordHash(request.Password1, out byte[] passwordHash, out byte[] passwordSalt);

  //all usernames will be stored as lowercase
      user.PasswordHash = passwordHash;
      user.PasswordSalt = passwordSalt;
*/

      await Http.PutAsJsonAsync("User", @request);

    }
  }

}
